<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aiwsport.core.mapper.IncomeMapper" >
  <resultMap id="BaseResultMap" type="com.aiwsport.core.entity.Income" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="drawExtid" property="drawExtid" jdbcType="INTEGER" />
    <result column="proofUrl" property="proofUrl" jdbcType="VARCHAR" />
    <result column="proofPrice" property="proofPrice" jdbcType="INTEGER" />
    <result column="info" property="info" jdbcType="VARCHAR" />
    <result column="orderNo" property="orderNo" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="opName" property="opName" jdbcType="VARCHAR" />
    <result column="opId" property="opId" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modifyTime" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from income
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aiwsport.core.entity.Income" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into income (drawExtid, proofUrl, proofPrice, info, orderNo,
      status, opName, opId, 
      createTime, modifyTime)
    values (#{drawExtid,jdbcType=INTEGER}, #{proofUrl,jdbcType=VARCHAR}, #{proofPrice,jdbcType=INTEGER},
      #{info,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR},
      #{status,jdbcType=VARCHAR}, #{opName,jdbcType=VARCHAR}, #{opId,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.aiwsport.core.entity.Income" >
    update income
    set drawExtid = #{drawExtid,jdbcType=INTEGER},
      proofUrl = #{proofUrl,jdbcType=VARCHAR},
      proofPrice = #{proofPrice,jdbcType=INTEGER},
      info = #{info,jdbcType=VARCHAR},
      orderNo = #{orderNo,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      opName = #{opName,jdbcType=VARCHAR},
      opId = #{opId,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      modifyTime = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, drawExtid, proofUrl, proofPrice, info, orderNo, status, opName, opId, createTime, modifyTime
    from income
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, drawExtid, proofUrl, proofPrice, info, orderNo, status, opName, opId, createTime, modifyTime
    from income
  </select>
  <select id="getPayFinish" resultMap="BaseResultMap" >
    select id, drawExtid, proofUrl, proofPrice, info, orderNo, status, opName, opId, createTime, modifyTime
    from income
    <if test="arg2 != ''">
      where status = #{arg2}
    </if>
    limit #{arg0}, #{arg1}
  </select>
  <select id="getPayFinishCount" resultType="int" >
    select count(1) from income
    <if test="_parameter != ''">
      where status = #{status,jdbcType=VARCHAR}
    </if>
  </select>
  <select id="getIncomeByOrderNo" resultMap="BaseResultMap" >
    select id, drawExtid, proofUrl, proofPrice, info, orderNo, status, opName, opId, createTime, modifyTime
    from income where orderNo = #{orderNo,jdbcType=VARCHAR}
  </select>

  <update id="refund" parameterType="java.lang.Integer" >
    update income
    set status = 4
    where id = #{id,jdbcType=INTEGER} and status = 3
  </update>


</mapper>