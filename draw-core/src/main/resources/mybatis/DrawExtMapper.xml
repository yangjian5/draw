<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aiwsport.core.mapper.DrawExtMapper" >
  <resultMap id="BaseResultMap" type="com.aiwsport.core.entity.DrawExt" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="extUid" property="extUid" jdbcType="INTEGER" />
    <result column="drawId" property="drawId" jdbcType="INTEGER" />
    <result column="extPrice" property="extPrice" jdbcType="INTEGER" />
    <result column="opName" property="opName" jdbcType="VARCHAR" />
    <result column="opId" property="opId" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modifyTime" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from draw_ext
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.aiwsport.core.entity.DrawExt" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into draw_ext (extUid, drawId, extPrice, 
      opName, opId, createTime, 
      modifyTime)
    values (#{extUid,jdbcType=INTEGER}, #{drawId,jdbcType=INTEGER}, #{extPrice,jdbcType=INTEGER},
      #{opName,jdbcType=VARCHAR}, #{opId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.aiwsport.core.entity.DrawExt" >
    update draw_ext
    set extUid = #{extUid,jdbcType=INTEGER},
      drawId = #{drawId,jdbcType=INTEGER},
      extPrice = #{extPrice,jdbcType=INTEGER},
      opName = #{opName,jdbcType=VARCHAR},
      opId = #{opId,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      modifyTime = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, extUid, drawId, extPrice, opName, opId, createTime, modifyTime
    from draw_ext
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, extUid, drawId, extPrice, opName, opId, createTime, modifyTime
    from draw_ext
  </select>

  <select id="getMaxOne" resultMap="BaseResultMap" >
    select id, extUid, drawId, extPrice, opName, opId, createTime, modifyTime
    from draw_ext order by id desc limit 1;
  </select>

  <select id="getIndex" resultMap="BaseResultMap" >
    select id, extUid, drawId, MIN(extPrice) AS extPrice, opName, opId, createTime, modifyTime
    from draw_ext
    GROUP BY drawId
    having id &lt;= #{arg0}
    order by extPrice
    <if test="arg3 == 1">
      desc
    </if>
    <if test="arg3 == 2">
      asc
    </if>
    limit #{arg1}, #{arg2}
  </select>

  <select id="getMyList" resultMap="BaseResultMap">
    select id, extUid, drawId, extPrice, opName, opId, createTime, modifyTime
    from draw_ext
    where extUid = #{arg0}
    order by modifyTime desc
    limit #{arg1}, #{arg2}
  </select>

  <select id="getMaxPriceByDrawId" resultMap="BaseResultMap">
    select id, extUid, drawId, extPrice, opName, opId, createTime, modifyTime
    from draw_ext
    where drawId = #{drawId,jdbcType=INTEGER}
    order by extPrice asc
    limit 1
  </select>

  <delete id="deleteDrawExt" parameterType="java.lang.Integer" >
    delete from draw_ext
    where drawId = #{drawId,jdbcType=INTEGER}
  </delete>

</mapper>
